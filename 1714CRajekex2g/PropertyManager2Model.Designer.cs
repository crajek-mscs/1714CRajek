//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PropertyManager2Model", "BuildingApartment", "Building", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1714CRajekex2g.Building), "Apartment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1714CRajekex2g.Apartment))]
[assembly: EdmRelationshipAttribute("PropertyManager2Model", "TenantApartment", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1714CRajekex2g.Person), "Apartment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1714CRajekex2g.Apartment))]
[assembly: EdmRelationshipAttribute("PropertyManager2Model", "AdminApartment", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1714CRajekex2g.Person), "Apartment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1714CRajekex2g.Apartment))]
[assembly: EdmRelationshipAttribute("PropertyManager2Model", "ApartmentInvoice", "Apartment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1714CRajekex2g.Apartment), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1714CRajekex2g.Invoice))]
[assembly: EdmRelationshipAttribute("PropertyManager2Model", "InvoiceLineItem", "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1714CRajekex2g.Invoice), "LineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1714CRajekex2g.LineItem))]
[assembly: EdmRelationshipAttribute("PropertyManager2Model", "InvoiceReceipt", "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_1714CRajekex2g.Invoice), "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_1714CRajekex2g.Receipt))]

#endregion

namespace _1714CRajekex2g
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PropertyManager2ModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PropertyManager2ModelContainer object using the connection string found in the 'PropertyManager2ModelContainer' section of the application configuration file.
        /// </summary>
        public PropertyManager2ModelContainer() : base("name=PropertyManager2ModelContainer", "PropertyManager2ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PropertyManager2ModelContainer object.
        /// </summary>
        public PropertyManager2ModelContainer(string connectionString) : base(connectionString, "PropertyManager2ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PropertyManager2ModelContainer object.
        /// </summary>
        public PropertyManager2ModelContainer(EntityConnection connection) : base(connection, "PropertyManager2ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Building> Buildings
        {
            get
            {
                if ((_Buildings == null))
                {
                    _Buildings = base.CreateObjectSet<Building>("Buildings");
                }
                return _Buildings;
            }
        }
        private ObjectSet<Building> _Buildings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Apartment> Apartments
        {
            get
            {
                if ((_Apartments == null))
                {
                    _Apartments = base.CreateObjectSet<Apartment>("Apartments");
                }
                return _Apartments;
            }
        }
        private ObjectSet<Apartment> _Apartments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LineItem> LineItems
        {
            get
            {
                if ((_LineItems == null))
                {
                    _LineItems = base.CreateObjectSet<LineItem>("LineItems");
                }
                return _LineItems;
            }
        }
        private ObjectSet<LineItem> _LineItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invoice> Invoices
        {
            get
            {
                if ((_Invoices == null))
                {
                    _Invoices = base.CreateObjectSet<Invoice>("Invoices");
                }
                return _Invoices;
            }
        }
        private ObjectSet<Invoice> _Invoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Receipt> Receipts
        {
            get
            {
                if ((_Receipts == null))
                {
                    _Receipts = base.CreateObjectSet<Receipt>("Receipts");
                }
                return _Receipts;
            }
        }
        private ObjectSet<Receipt> _Receipts;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Buildings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildings(Building building)
        {
            base.AddObject("Buildings", building);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Apartments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApartments(Apartment apartment)
        {
            base.AddObject("Apartments", apartment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LineItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLineItems(LineItem lineItem)
        {
            base.AddObject("LineItems", lineItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoices(Invoice invoice)
        {
            base.AddObject("Invoices", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Receipts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceipts(Receipt receipt)
        {
            base.AddObject("Receipts", receipt);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PropertyManager2Model", Name="Apartment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Apartment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Apartment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="apartmentNum">Initial value of the ApartmentNum property.</param>
        /// <param name="squareFeet">Initial value of the SquareFeet property.</param>
        /// <param name="bathrooms">Initial value of the Bathrooms property.</param>
        /// <param name="rent">Initial value of the Rent property.</param>
        public static Apartment CreateApartment(global::System.Int32 id, global::System.String apartmentNum, global::System.Int32 squareFeet, global::System.Int32 bathrooms, global::System.Decimal rent)
        {
            Apartment apartment = new Apartment();
            apartment.Id = id;
            apartment.ApartmentNum = apartmentNum;
            apartment.SquareFeet = squareFeet;
            apartment.Bathrooms = bathrooms;
            apartment.Rent = rent;
            return apartment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApartmentNum
        {
            get
            {
                return _ApartmentNum;
            }
            set
            {
                OnApartmentNumChanging(value);
                ReportPropertyChanging("ApartmentNum");
                _ApartmentNum = StructuralObject.SetValidValue(value, false, "ApartmentNum");
                ReportPropertyChanged("ApartmentNum");
                OnApartmentNumChanged();
            }
        }
        private global::System.String _ApartmentNum;
        partial void OnApartmentNumChanging(global::System.String value);
        partial void OnApartmentNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SquareFeet
        {
            get
            {
                return _SquareFeet;
            }
            set
            {
                OnSquareFeetChanging(value);
                ReportPropertyChanging("SquareFeet");
                _SquareFeet = StructuralObject.SetValidValue(value, "SquareFeet");
                ReportPropertyChanged("SquareFeet");
                OnSquareFeetChanged();
            }
        }
        private global::System.Int32 _SquareFeet;
        partial void OnSquareFeetChanging(global::System.Int32 value);
        partial void OnSquareFeetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Bathrooms
        {
            get
            {
                return _Bathrooms;
            }
            set
            {
                OnBathroomsChanging(value);
                ReportPropertyChanging("Bathrooms");
                _Bathrooms = StructuralObject.SetValidValue(value, "Bathrooms");
                ReportPropertyChanged("Bathrooms");
                OnBathroomsChanged();
            }
        }
        private global::System.Int32 _Bathrooms;
        partial void OnBathroomsChanging(global::System.Int32 value);
        partial void OnBathroomsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rent
        {
            get
            {
                return _Rent;
            }
            set
            {
                OnRentChanging(value);
                ReportPropertyChanging("Rent");
                _Rent = StructuralObject.SetValidValue(value, "Rent");
                ReportPropertyChanged("Rent");
                OnRentChanged();
            }
        }
        private global::System.Decimal _Rent;
        partial void OnRentChanging(global::System.Decimal value);
        partial void OnRentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PropertyManager2Model", "BuildingApartment", "Building")]
        public Building Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("PropertyManager2Model.BuildingApartment", "Building").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("PropertyManager2Model.BuildingApartment", "Building").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Building> BuildingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Building>("PropertyManager2Model.BuildingApartment", "Building");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Building>("PropertyManager2Model.BuildingApartment", "Building", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PropertyManager2Model", "TenantApartment", "Person")]
        public Person Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("PropertyManager2Model.TenantApartment", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("PropertyManager2Model.TenantApartment", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("PropertyManager2Model.TenantApartment", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("PropertyManager2Model.TenantApartment", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PropertyManager2Model", "AdminApartment", "Person")]
        public Person Admin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("PropertyManager2Model.AdminApartment", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("PropertyManager2Model.AdminApartment", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> AdminReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("PropertyManager2Model.AdminApartment", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("PropertyManager2Model.AdminApartment", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PropertyManager2Model", "ApartmentInvoice", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("PropertyManager2Model.ApartmentInvoice", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("PropertyManager2Model.ApartmentInvoice", "Invoice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PropertyManager2Model", Name="Building")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Building : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Building object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="buildingName">Initial value of the BuildingName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="zip">Initial value of the Zip property.</param>
        public static Building CreateBuilding(global::System.Int32 id, global::System.String buildingName, global::System.String address, global::System.String city, global::System.String state, global::System.String zip)
        {
            Building building = new Building();
            building.Id = id;
            building.BuildingName = buildingName;
            building.Address = address;
            building.City = city;
            building.State = state;
            building.Zip = zip;
            return building;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BuildingName
        {
            get
            {
                return _BuildingName;
            }
            set
            {
                OnBuildingNameChanging(value);
                ReportPropertyChanging("BuildingName");
                _BuildingName = StructuralObject.SetValidValue(value, false, "BuildingName");
                ReportPropertyChanged("BuildingName");
                OnBuildingNameChanged();
            }
        }
        private global::System.String _BuildingName;
        partial void OnBuildingNameChanging(global::System.String value);
        partial void OnBuildingNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, false, "Zip");
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PropertyManager2Model", "BuildingApartment", "Apartment")]
        public EntityCollection<Apartment> Apartments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Apartment>("PropertyManager2Model.BuildingApartment", "Apartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Apartment>("PropertyManager2Model.BuildingApartment", "Apartment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PropertyManager2Model", Name="Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invoice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="invoiceDate">Initial value of the InvoiceDate property.</param>
        /// <param name="dueDate">Initial value of the DueDate property.</param>
        public static Invoice CreateInvoice(global::System.Int32 id, global::System.DateTime invoiceDate, global::System.DateTime dueDate)
        {
            Invoice invoice = new Invoice();
            invoice.Id = id;
            invoice.InvoiceDate = invoiceDate;
            invoice.DueDate = dueDate;
            return invoice;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value, "InvoiceDate");
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private global::System.DateTime _InvoiceDate;
        partial void OnInvoiceDateChanging(global::System.DateTime value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value, "DueDate");
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private global::System.DateTime _DueDate;
        partial void OnDueDateChanging(global::System.DateTime value);
        partial void OnDueDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PropertyManager2Model", "ApartmentInvoice", "Apartment")]
        public Apartment Apartment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Apartment>("PropertyManager2Model.ApartmentInvoice", "Apartment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Apartment>("PropertyManager2Model.ApartmentInvoice", "Apartment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Apartment> ApartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Apartment>("PropertyManager2Model.ApartmentInvoice", "Apartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Apartment>("PropertyManager2Model.ApartmentInvoice", "Apartment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PropertyManager2Model", "InvoiceLineItem", "LineItem")]
        public EntityCollection<LineItem> LineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LineItem>("PropertyManager2Model.InvoiceLineItem", "LineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LineItem>("PropertyManager2Model.InvoiceLineItem", "LineItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PropertyManager2Model", "InvoiceReceipt", "Receipt")]
        public EntityCollection<Receipt> Receipts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receipt>("PropertyManager2Model.InvoiceReceipt", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receipt>("PropertyManager2Model.InvoiceReceipt", "Receipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PropertyManager2Model", Name="LineItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LineItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LineItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static LineItem CreateLineItem(global::System.Int32 id, global::System.String description, global::System.Decimal amount)
        {
            LineItem lineItem = new LineItem();
            lineItem.Id = id;
            lineItem.Description = description;
            lineItem.Amount = amount;
            return lineItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PropertyManager2Model", "InvoiceLineItem", "Invoice")]
        public Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("PropertyManager2Model.InvoiceLineItem", "Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("PropertyManager2Model.InvoiceLineItem", "Invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("PropertyManager2Model.InvoiceLineItem", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("PropertyManager2Model.InvoiceLineItem", "Invoice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PropertyManager2Model", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static Person CreatePerson(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String phone, global::System.String email)
        {
            Person person = new Person();
            person.Id = id;
            person.FirstName = firstName;
            person.LastName = lastName;
            person.Phone = phone;
            person.Email = email;
            return person;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PropertyManager2Model", "TenantApartment", "Apartment")]
        public EntityCollection<Apartment> Apartments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Apartment>("PropertyManager2Model.TenantApartment", "Apartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Apartment>("PropertyManager2Model.TenantApartment", "Apartment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PropertyManager2Model", "AdminApartment", "Apartment")]
        public EntityCollection<Apartment> Apartments1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Apartment>("PropertyManager2Model.AdminApartment", "Apartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Apartment>("PropertyManager2Model.AdminApartment", "Apartment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PropertyManager2Model", Name="Receipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Receipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Receipt object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="receiptDate">Initial value of the ReceiptDate property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Receipt CreateReceipt(global::System.Int32 id, global::System.DateTime receiptDate, global::System.Decimal amount)
        {
            Receipt receipt = new Receipt();
            receipt.Id = id;
            receipt.ReceiptDate = receiptDate;
            receipt.Amount = amount;
            return receipt;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReceiptDate
        {
            get
            {
                return _ReceiptDate;
            }
            set
            {
                OnReceiptDateChanging(value);
                ReportPropertyChanging("ReceiptDate");
                _ReceiptDate = StructuralObject.SetValidValue(value, "ReceiptDate");
                ReportPropertyChanged("ReceiptDate");
                OnReceiptDateChanged();
            }
        }
        private global::System.DateTime _ReceiptDate;
        partial void OnReceiptDateChanging(global::System.DateTime value);
        partial void OnReceiptDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PropertyManager2Model", "InvoiceReceipt", "Invoice")]
        public Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("PropertyManager2Model.InvoiceReceipt", "Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("PropertyManager2Model.InvoiceReceipt", "Invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("PropertyManager2Model.InvoiceReceipt", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("PropertyManager2Model.InvoiceReceipt", "Invoice", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
